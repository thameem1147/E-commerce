[{"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\index.js":"1","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\App.js":"2","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\products\\product\\Product.jsx":"3","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\products\\product\\style.js":"4","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\products\\Products.jsx":"5","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\navbar\\Navbar.jsx":"6","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\navbar\\style.js":"7","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\products\\style.js":"8","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\lib\\commerce.js":"9","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\cart\\Cart.jsx":"10","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\cart\\style.js":"11","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\cart\\cartItems\\CartItem.jsx":"12","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\cart\\cartItems\\style.js":"13","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\checkout\\Checkout.jsx":"14","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\checkout\\style.js":"15","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\AddressForm.jsx":"16","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\PaymentForm.jsx":"17","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\CustomTextField.jsx":"18","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\Review.jsx":"19"},{"size":147,"mtime":1609313277315,"results":"20","hashOfConfig":"21"},{"size":2527,"mtime":1609415076771,"results":"22","hashOfConfig":"21"},{"size":1205,"mtime":1609222855282,"results":"23","hashOfConfig":"21"},{"size":325,"mtime":1609153436862,"results":"24","hashOfConfig":"21"},{"size":645,"mtime":1609319726638,"results":"25","hashOfConfig":"21"},{"size":1363,"mtime":1609235775260,"results":"26","hashOfConfig":"21"},{"size":1631,"mtime":1609156825470,"results":"27","hashOfConfig":"21"},{"size":298,"mtime":1609216677146,"results":"28","hashOfConfig":"21"},{"size":121,"mtime":1609217679478,"results":"29","hashOfConfig":"21"},{"size":1789,"mtime":1609496285882,"results":"30","hashOfConfig":"21"},{"size":597,"mtime":1609224739351,"results":"31","hashOfConfig":"21"},{"size":1263,"mtime":1609301723682,"results":"32","hashOfConfig":"21"},{"size":349,"mtime":1609233639064,"results":"33","hashOfConfig":"21"},{"size":3803,"mtime":1609497453440,"results":"34","hashOfConfig":"21"},{"size":1208,"mtime":1609307992787,"results":"35","hashOfConfig":"21"},{"size":5269,"mtime":1609399228207,"results":"36","hashOfConfig":"21"},{"size":2660,"mtime":1609497276573,"results":"37","hashOfConfig":"21"},{"size":594,"mtime":1609477048716,"results":"38","hashOfConfig":"21"},{"size":923,"mtime":1609409217289,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"w5dha0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\index.js",[],["82","83"],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\App.js",["84"],"import React from \"react\";\nimport Products from \"./components/products/Products\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport { commerce } from \"./lib/commerce\";\nimport { useState, useEffect } from \"react\";\nimport Cart from \"./components/cart/Cart\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./components/checkoutform/checkout/Checkout\";\n\n\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const [order, setOrder] = useState({});\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  \n  const fetchProducts = async () =>\n  {\n    const { data } = await commerce.products.list();\n    setProducts(data);\n  }\n   const fetchCart = async () => {\n    setCart(await commerce.cart.retrieve());\n   }\n const handleCart = async (productId, quantity) =>\n {\n   const { cart } = await commerce.cart.add( productId, quantity );\n   setCart(cart);\n }\n const handelUpdateCartQuantity = async (productId, quantity) =>\n {\n   const { cart } = await commerce.cart.update(productId,{quantity});\n   setCart(cart);\n }\n\n const handleRemoveFromCart = async (productId) => {\n   const { cart } = await commerce.cart.remove(productId);\n   setCart(cart);\n }\n const handleEmptyCart = async () =>\n {\n   const { cart } = await commerce.cart.empty();\n   setCart(cart);\n }\n\n const refreshCart = async () =>\n {\n   const newCart = await commerce.cart.refresh();\n   setCart(newCart);\n }\n\nconst handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n  try {\n    const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder)\n    setOrder(incomingOrder)\n    refreshCart();\n  } catch(error){\n    setErrorMsg(error.data.error.message);\n  }\n}\n\n  useEffect(() =>\n  {\n   fetchProducts();\n  },[]);\n  return (\n      <Router>\n        <div>\n          <Navbar totalItems={cart.total_items}/>\n           <Switch>\n           <Route exact path=\"/\">\n           <Products products={products} onAddToCart={handleCart}/>\n           </Route>\n           <Route exact path=\"/cart\">\n           <Cart \n           cart={cart}\n           fun1={handelUpdateCartQuantity}\n           fun2={handleRemoveFromCart}\n           fun3={handleEmptyCart}\n            />\n           </Route>\n           <Route exact path=\"/checkout\">\n           <Checkout cart={cart} order={order} handleCaptureCheckout={handleCaptureCheckout} errorMsg={errorMsg}\n           />\n           </Route>\n          </Switch>\n      </div>\n      </Router>\n  )\n}\n\nexport default App;\n","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\products\\product\\Product.jsx",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\products\\product\\style.js",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\products\\Products.jsx",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\navbar\\Navbar.jsx",["85","86"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from \"@material-ui/core\";\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport logo from \"../../assets/cart_img.png\";\r\nimport useStyles from \"./style\";\r\nimport { Link, useLocation } from \"react-router-dom\"\r\n\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    return (\r\n       <>\r\n       <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n           <Toolbar>\r\n               <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                   <img src={logo} alt=\"cart-corner\" height=\"25px\" className={classes.image} />\r\n                   cart-corner\r\n               </Typography>\r\n               <div className={classes.grow} />\r\n               {location.pathname === '/' && (\r\n               <div className={classes.button}>\r\n               <IconButton component={Link} to=\"/cart\" aria-label=\"show cart items\" color=\"inherit\">\r\n                     <Badge badgeContent={totalItems} color=\"secondary\">\r\n                         <ShoppingCart />\r\n                     </Badge>\r\n                 </IconButton>\r\n               </div> )}\r\n           </Toolbar>\r\n       </AppBar>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\navbar\\style.js",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\products\\style.js",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\lib\\commerce.js",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\cart\\Cart.jsx",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\cart\\style.js",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\cart\\cartItems\\CartItem.jsx",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\cart\\cartItems\\style.js",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\checkout\\Checkout.jsx",["87"],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\checkout\\style.js",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\AddressForm.jsx",["88","89"],"import React,{ useState, useEffect} from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography  } from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport FormInput from \"./CustomTextField\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AddressForm = ({ checkoutToken,next }) => {\r\n    const [shippingCountries, setShippingCountries ] = useState([]);\r\n    const [shippingCountry, setShippingCountry ] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions ] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision ] = useState('');\r\n    const [shippingOptions, setShippingOptions ] = useState([]);\r\n    const [shippingOption, setShippingOption ] = useState('');\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id : code, label:name}));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id : code, label:name}));\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})`}))\r\n\r\n    const methods = useForm();\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchShippingSubdivisions = async (countryCode) => {\r\n        const {subdivisions} = await commerce.services.localeListSubdivisions(countryCode);\r\n        setShippingSubdivisions(subdivisions)\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n     const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n         const  options  = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region});\r\n         setShippingOptions(options);\r\n         setShippingOption(options[0].id);\r\n     }\r\n\r\n        useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n       useEffect(() => {\r\n       if(shippingCountry) fetchShippingSubdivisions(shippingCountry)\r\n    },[shippingCountry]);\r\n\r\n    useEffect(() => {\r\n     if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    },[shippingSubdivision]);\r\n    return (\r\n        <>\r\n        <Typography variant=\"h6\">Shipping Address</Typography>\r\n        <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption}))}>\r\n                <Grid container spacing={3}>\r\n                    <FormInput name=\"firstName\" label=\"first Name\"/>\r\n                    <FormInput name=\"lastName\" label=\"last Name\"/>\r\n                    <FormInput name=\"address\" label=\"Address\"/>\r\n                    <FormInput name=\"email\" label=\"Email\"/>\r\n                    <FormInput name=\"city\" label=\"City\"/>\r\n                    <FormInput name=\"zip\" label=\"ZIP / Postal Code\"/>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Country</InputLabel>\r\n                        <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                           {countries.map((country) => (\r\n                            <MenuItem key={country.id} value={country.id}>\r\n                               {country.label}\r\n                            </MenuItem> \r\n                           ))}\r\n                        </Select>\r\n                    </Grid>\r\n                     <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Subdivision</InputLabel>\r\n                        <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                           {subdivisions.map((subdivision) => (\r\n                            <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                               {subdivision.label}\r\n                            </MenuItem> \r\n                           ))}\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Options</InputLabel>\r\n                        <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                           {options.map((option) => (\r\n                            <MenuItem key={option.id} value={option.id}>\r\n                               {option.label}\r\n                            </MenuItem> \r\n                           ))}\r\n                        </Select>\r\n                       </Grid>\r\n                </Grid>\r\n                <br />\r\n                <div style={{ display: \"flex\", justifyContent:\"space-between\"}}>\r\n                    <Button component={Link} to=\"/cart\" variant=\"contained\" color=\"secondary\">Back to Cart</Button>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                </div>\r\n            </form>\r\n        </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm;\r\n","C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\PaymentForm.jsx",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\CustomTextField.jsx",[],"C:\\Users\\LENIOVO\\Documents\\Downloads\\REACT\\e-commerce\\src\\components\\checkoutform\\Review.jsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":23,"column":10,"nodeType":"96","messageId":"97","endLine":23,"endColumn":19},{"ruleId":"94","severity":1,"message":"98","line":2,"column":46,"nodeType":"96","messageId":"97","endLine":2,"endColumn":54},{"ruleId":"94","severity":1,"message":"99","line":2,"column":56,"nodeType":"96","messageId":"97","endLine":2,"endColumn":60},{"ruleId":"100","severity":1,"message":"101","line":29,"column":7,"nodeType":"102","endLine":29,"endColumn":13,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":40,"column":8,"nodeType":"102","endLine":40,"endColumn":10,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"106","line":48,"column":7,"nodeType":"102","endLine":48,"endColumn":28,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'fetchCart' is assigned a value but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [cart, history]",{"range":"119","text":"120"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"121","text":"122"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"123","text":"124"},[1155,1161],"[cart, history]",[2112,2114],"[checkoutToken.id]",[2383,2404],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]